services:

  mysql:
    container_name: backend
    image: mysql:latest
    ports:
      - 3306:3306
    environment:
      - MYSQL_ROOT_PASSWORD=dev
      - MYSQL_USER=dev
      - MYSQL_PASSWORD=dev
      - MYSQL_DATABASE=dev
      - TZ=Europe/Zurich
    networks:
      ecovacs_stack:
      ecovacs:
    volumes:
      - ./mysql/data:/var/lib/mysql
      - ./mysql/mysql.conf.d:/etc/mysql/conf.d
      - ./mysql/scripts/init.sql:/docker-entrypoint-initdb.d/1.sql
    restart: unless-stopped


  backend:
    depends_on:
      - mysql
    build:
      context: ./backend
      dockerfile: Dockerfile
      network: host
      tags:
        - "${REGISTRY}/backend"
#      args:
#        BASE_URL: https://localhost
#        BASE_URL_01: https://ecovacs.com
#    container_name: backend
    networks:
      ecovacs_stack:
      ecovacs:
#    volumes:
#      - ./backend:/opt/app
# bash complaied about UID being readonly shell variable, used below instead
    user: '${REAL_UID}:${REAL_GID}'
    environment:
      - NODE_EXTRA_CA_CERTS=/usr/local/share/ca-certificates/mkcert-root.crt
      - BASE_URL=https://localhost
      - BASE_URL_01=https://ecovacs.com
      - MYSQL_USER=dev
      - MYSQL_PASSWORD=dev
      - MYSQL_DATABASE=dev
      - TZ=Europe/Zurich
    command: bash -c './generate_certs.sh && yarn run dev'
#    command: bash -c './generate_certs.sh && yarn install && yarn run dev'
#    stdin_open: true
    restart: unless-stopped

  nginx:
    container_name: nginx
    depends_on:
      - backend
    image: nginx:alpine
    ports:
      - 8883:8883
      - 443:443
      - 3000:3000
      - 8070:80
    networks:
      ecovacs:
      ecovacs_stack:
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - ./nginx/:/etc/nginx:ro
    restart: unless-stopped

  frontend:
    depends_on:
      - nginx
    build:
      context: ./frontend
      dockerfile: Dockerfile
      network: host
      tags:
        - "${REGISTRY}/frontend"
    container_name: frontend
    user: '${REAL_UID}:${REAL_GID}'
    environment:
      - WDS_SOCKET_PORT=0
      - TZ=Europe/Zurich
    networks:
      ecovacs:
#    volumes:
#      - ./frontend:/opt/app
    ports:
      - 4200:3000
#    command: bash -c 'yarn install && yarn start'
#    stdin_open: true
    restart: unless-stopped

networks:
    ecovacs:
      name: "ecovacs"
      driver: bridge
      driver_opts:
        com.docker.network.bridge.name: "net1"
        com.docker.network.bridge.host_binding_ipv4: "10.100.10.21"
      ipam:
        driver: default
        config:
          - subnet: 10.100.81.0/24
            ip_range: 10.100.81.0/24
            gateway: 10.100.81.1
    ecovacs_stack:
      internal: true
